<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Container\Attributes\DB;
use Illuminate\Container\Attributes\Log;
use {{ namespacedParentModel }};
use Illuminate\Routing\Controllers\HasMiddleware;
use Illuminate\Routing\Controllers\Middleware;

final class {{ class }} extends Controller implements HasMiddleware
{
    /**
     * Instantiate a new {{ class }} instance.
     */
    public function __construct(
        #[DB('pgsql')] protected $db,
        #[Log] protected $log
    ) {
        // body
    }

    /**
     * Get the middleware that should be assigned to the controller.
     */
    public static function middleware(): array
    {
        return [
            new Middleware('permissions:create permissionName', only: ['create', 'store']),
            new Middleware('permissions:viewDetail permissionName', only: ['show']),
            new Middleware('permissions:update permissionName', only: ['edit', 'update']),
            new Middleware('permissions:delete permissionName', only: ['destroy']),
        ];
    }

    /**
     * Show the form for creating the new resource.
     */
    public function create({{ parentModel }} ${{ parentModelVariable }}): never
    {
        abort(404);
    }

    /**
     * Store the newly created resource in storage.
     */
    public function store(Request $request, {{ parentModel }} ${{ parentModelVariable }}): never
    {
        abort(404);
    }

    /**
     * Display the resource.
     */
    public function show({{ parentModel }} ${{ parentModelVariable }})
    {
        //
    }

    /**
     * Show the form for editing the resource.
     */
    public function edit({{ parentModel }} ${{ parentModelVariable }})
    {
        //
    }

    /**
     * Update the resource in storage.
     */
    public function update(Request $request, {{ parentModel }} ${{ parentModelVariable }})
    {
        //
    }

    /**
     * Remove the resource from storage.
     */
    public function destroy({{ parentModel }} ${{ parentModelVariable }}): never
    {
        abort(404);
    }
}
